@model MarketCatalogue.Presentation.Areas.Shops.Models.ViewModels.ShopWithProductsViewModel

@{
    ViewData["Title"] = Model.ShopName;
}

<h2>@Model.ShopName</h2>

<div>
    <h4>Address</h4>
    <address>
        @Model.Address.Street <br />
        @Model.Address.City, @Model.Address.State @Model.Address.PostalCode <br />
        @Model.Address.Country
    </address>
</div>

<div>
    <h4>Schedule</h4>
    @if (Model.Schedule != null && Model.Schedule.Any())
    {
        <ul>
            @foreach (var scheduleEntry in Model.Schedule.OrderBy(s => s.Day))
            {
                <li>
                    <strong>@scheduleEntry.Day:</strong>
                    @(scheduleEntry.OpenTime == TimeSpan.Zero && scheduleEntry.CloseTime == TimeSpan.Zero
                        ? "Closed"
                        : $"{scheduleEntry.OpenTime:hh\\:mm} - {scheduleEntry.CloseTime:hh\\:mm}")
                </li>
            }
        </ul>
    }
    else
    {
        <p>No schedule available.</p>
    }
</div>

<div>
    <h4>Products</h4>
    @if (Model.Products != null && Model.Products.Any())
    {
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Category</th>
                    <th>Quantity</th>
                    <th>Price</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var product in Model.Products)
                {
                    <tr>
                        <td>@product.Name</td>
                        <td>@product.Category</td>
                        <td>@product.Quantity</td>
                        <td>@product.Price.ToString("C")</td>
                    </tr>
                }
            </tbody>
        </table>

        <!-- TODO: Add pagination controls here -->
    }
    else
    {
        <p>No products available.</p>
    }
</div>
