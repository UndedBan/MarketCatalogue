@model MarketCatalogue.Presentation.Areas.Shops.Models.ViewModels.ShopWithProductsPaginatedViewModel

@{
    ViewData["Title"] = Model.ShopWithProducts.ShopName;
}


    <style>
        .text-primary-green {
            color: #00b894 !important;
        }

        .btn-primary-green {
            background-color: #00b894;
            border-color: #00b894;
            color: white;
        }

            .btn-primary-green:hover,
            .btn-primary-green:focus {
                background-color: #019974;
                border-color: #019974;
                color: white;
            }

        .btn-outline-primary-green {
            color: #00b894;
            border-color: #00b894;
        }

            .btn-outline-primary-green:hover,
            .btn-outline-primary-green:focus {
                background-color: #00b894;
                border-color: #019974;
                color: white;
            }

        .shop-info-sidebar {
            background-color: #f9fdfb;
            border-radius: 1rem;
            box-shadow: 0 0.15rem 0.4rem rgb(0 0 0 / 0.08);
            padding: 1rem 1.5rem;
            font-size: 0.9rem;
            max-height: 90vh;
            overflow-y: auto;
            position: sticky;
            top: 1rem;
        }

            .shop-info-sidebar h4 {
                color: #00b894;
                font-weight: 600;
                margin-bottom: 0.8rem;
            }

            .shop-info-sidebar address {
                font-style: normal;
                line-height: 1.3;
                margin-bottom: 1.2rem;
            }

        #shopMap {
            border-radius: 0.75rem;
            border: 1px solid #00b894;
            height: 250px;
            margin-bottom: 1rem;
        }

        table.table {
            border-radius: 0.75rem;
            overflow: hidden;
            box-shadow: 0 0.25rem 0.5rem rgb(0 0 0 / 0.05);
        }

            table.table thead {
                background-color: #00b894;
                color: white;
            }

            table.table tbody tr:hover {
                background-color: #e0f7f1;
            }

        .form-control-sm {
            min-height: 2.3rem;
        }
    </style>


@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var latStr = "@(Model.ShopWithProducts.Address.Latitude?.ToString("F6", System.Globalization.CultureInfo.InvariantCulture) ?? "")";
            var lngStr = "@(Model.ShopWithProducts.Address.Longitude?.ToString("F6", System.Globalization.CultureInfo.InvariantCulture) ?? "")";

            if (latStr && lngStr) {
                var lat = parseFloat(latStr);
                var lng = parseFloat(lngStr);

                var map = L.map('shopMap').setView([lat, lng], 15);

                L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                    maxZoom: 19,
                    attribution: '&copy; OpenStreetMap contributors'
                }).addTo(map);

                L.marker([lat, lng]).addTo(map)
                    .bindPopup('@Model.ShopWithProducts.ShopName')
                    .openPopup();
            } else {
                document.getElementById('shopMap').innerHTML = '<p class="text-muted">No location data available.</p>';
            }
        });
    </script>
}

<div class="container mt-4">
    <div class="row">
        <section class="col-lg-9 col-md-8">
            <h2 class="text-primary-green fw-bold mb-4">@Model.ShopWithProducts.ShopName</h2>

            <div class="d-flex justify-content-between align-items-center mb-3">
                <h4 class="fw-semibold text-primary-green">Products</h4>

                @if (User.IsInRole("Market Representative"))
                {
                    <a class="btn btn-primary-green btn-sm"
                       asp-area="Products"
                       asp-controller="Products"
                       asp-action="CreateProduct"
                       asp-route-shopId="@Model.ShopWithProducts.Id"
                       asp-route-shopName="@Model.ShopWithProducts.ShopName">
                        <i class="bi bi-plus-circle me-1"></i> Add Product
                    </a>
                }
            </div>

            <form method="get" class="mb-4">
                <input type="hidden" name="shopId" value="@Model.ShopWithProducts.Id" />

                <div class="row g-2">
                    <div class="col-md-5">
                        <input type="text"
                               name="searchName"
                               value="@Model.SearchName"
                               placeholder="Search by product name"
                               class="form-control form-control-sm" />
                    </div>

                    <div class="col-md-4">
                        <select name="searchCategory" class="form-select form-select-sm">
                            <option value="">All Categories</option>
                            @foreach (var category in Model.ProductCategories)
                            {
                                <option value="@category.Value" selected="@(category.Value == Model.SearchCategory ? "selected" : null)">
                                    @category.Text
                                </option>
                            }
                        </select>
                    </div>

                    <div class="col-md-3">
                        <button type="submit" class="btn btn-primary-green w-100 btn-sm">Search</button>
                    </div>
                </div>
            </form>

            @if (Model.ShopWithProducts.Products != null && Model.ShopWithProducts.Products.Any())
            {
                <table class="table table-striped align-middle mb-0">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Category</th>
                            <th>Quantity</th>
                            <th>Price</th>
                            @if (User.IsInRole("Market Representative"))
                            {
                                <th>Actions</th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var product in Model.ShopWithProducts.Products)
                        {
                            <tr>
                                <td>@product.Name</td>
                                <td>@product.Category.ToString()</td>
                                <td>@product.Quantity</td>
                                <td>@product.Price.ToString("C")</td>
                                @if (User.IsInRole("Market Representative"))
                                {
                                    <td>
                                        <a class="btn btn-outline-primary-green btn-sm"
                                           asp-area="Products"
                                           asp-controller="Products"
                                           asp-action="EditProduct"
                                           asp-route-productId="@product.Id">
                                            Edit
                                        </a>
                                    </td>
                                }
                                <td>
                                    <form asp-area="Purchasers"
                                          asp-controller="Purchasers"
                                          asp-action="AddToCart"
                                          method="post"
                                          class="d-flex align-items-center gap-2">
                                        <input type="hidden" name="ProductId" value="@product.Id" />

                                        <input type="number"
                                               name="Quantity"
                                               value="1"
                                               min="1"
                                               max="@product.Quantity"
                                               class="form-control form-control-sm"
                                               style="width: 70px;" />

                                        <button type="submit" class="btn btn-outline-primary-green btn-sm">
                                            Add To Cart
                                        </button>
                                    </form>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

                <div class="d-flex justify-content-center mt-5">
                    @await Html.PartialAsync("_Pagination", Model.Pagination)
                </div>
            }
            else
            {
                <p class="text-muted">No products available.</p>
            }
        </section>

        <aside class="col-lg-3 col-md-4 d-none d-md-block">
            <div class="shop-info-sidebar">
                @if (Model.ShopWithProducts.Address is not null)
                {
                    <div class="mb-4 pb-3 border-bottom">
                        <h6 class="text-secondary fw-bold mb-2" style="color: #555;">
                            <i class="bi bi-geo-alt-fill me-2" style="color:#00b894;opacity:0.75;"></i> Address
                        </h6>
                        <address class="mb-0 small text-muted ps-4" style="line-height: 1.4;">
                            @if (!string.IsNullOrEmpty(Model.ShopWithProducts.Address.Street))
                            {
                                @Model.ShopWithProducts.Address.Street <br />
                            }
                            @if (!string.IsNullOrEmpty(Model.ShopWithProducts.Address.City))
                            {
                                @Model.ShopWithProducts.Address.City
                            }
                            @if (!string.IsNullOrEmpty(Model.ShopWithProducts.Address.State))
                            {
                                @(" " + Model.ShopWithProducts.Address.State)
                            }
                            @if (!string.IsNullOrEmpty(Model.ShopWithProducts.Address.PostalCode))
                            {
                                <text> @Model.ShopWithProducts.Address.PostalCode</text>
                            }
                            @if (!string.IsNullOrEmpty(Model.ShopWithProducts.Address.Country))
                            {
                                <br />
                                @Model.ShopWithProducts.Address.Country
                            }
                        </address>
                    </div>
                }

                <h4>Shop Location</h4>
                <div id="shopMap"></div>

                <h4>Schedule</h4>
                @if (Model.ShopWithProducts.Schedule != null && Model.ShopWithProducts.Schedule.Any())
                {
                    <ul class="list-unstyled">
                        @foreach (var scheduleEntry in Model.ShopWithProducts.Schedule.OrderBy(s => s.Day))
                        {
                            <li>
                                <strong>@scheduleEntry.Day:</strong>
                                @if (scheduleEntry.OpenTime == TimeSpan.Zero && scheduleEntry.CloseTime == TimeSpan.Zero)
                                {
                                    <span class="text-danger">Closed</span>
                                }
                                else
                                {
                                    <span>
                                        @scheduleEntry.OpenTime.ToString(@"hh\:mm") - @scheduleEntry.CloseTime.ToString(@"hh\:mm")
                                    </span>
                                }
                            </li>
                        }
                    </ul>
                }
                else
                {
                    <p class="text-muted">No schedule available.</p>
                }
            </div>
        </aside>
    </div>
</div>