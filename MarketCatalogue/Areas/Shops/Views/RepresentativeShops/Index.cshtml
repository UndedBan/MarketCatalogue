@using MarketCatalogue.Presentation.Areas.Shops.Models.ViewModels
@model RepresentativeShopsViewModel

@{
    ViewData["Title"] = "My Shops";
}

<div class="d-flex justify-content-between align-items-center mb-5">
    <h1 class="display-4 fw-bold text-primary mb-0">Your Shops</h1>
    <a class="btn btn-primary btn-lg rounded-pill shadow-sm d-inline-flex align-items-center gap-2 px-4" asp-action="CreateShop" asp-controller="RepresentativeShops">
        <i class="bi bi-plus-circle-fill fs-5"></i> Add New Shop
    </a>
</div>

@if (Model.Shops == null || !Model.Shops.Any())
{
    <div class="alert alert-info text-center py-5 rounded-4 shadow-sm" role="alert">
        <h3 class="alert-heading text-primary fw-bold mb-3">No Shops Found!</h3>
        <p class="lead mb-4">It looks like you haven't created any shops yet. Start building your presence!</p>
        <hr class="my-4">
        <p class="mb-0">Click the "<span class="fw-bold">Add New Shop</span>" button above to get started and showcase your products.</p>
    </div>
}
else
{
    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4 mb-5">
        @foreach (var shop in Model.Shops)
        {
            <div class="col">
                <div class="card h-100 shadow-lg border-0 rounded-4 overflow-hidden">
                    <div class="card-header bg-primary text-white p-3 text-center">
                        <h4 class="card-title fw-bold mb-0">@shop.ShopName</h4>
                    </div>
                    <div class="card-body d-flex flex-column p-4">

                        @if (shop.Address is not null)
                        {
                            <div class="mb-4 pb-3 border-bottom">
                                <h6 class="text-secondary fw-bold mb-2">
                                    <i class="bi bi-geo-alt-fill me-2 text-primary opacity-75"></i> Address
                                </h6>
                                <address class="mb-0 small text-muted ps-4" style="line-height: 1.4;">
                                    @if (!string.IsNullOrEmpty(shop.Address.Street))
                                    {
                                        @shop.Address.Street <br />
                                    }
                                    @if (!string.IsNullOrEmpty(shop.Address.City))
                                    {
                                        @shop.Address.City
                                    }
                                    @if (!string.IsNullOrEmpty(shop.Address.State))
                                    {
                                        @shop.Address.State
                                    }
                                    @if (!string.IsNullOrEmpty(shop.Address.PostalCode))
                                    {
                                        <text> @shop.Address.PostalCode</text>
                                    }
                                    @if (!string.IsNullOrEmpty(shop.Address.Country))
                                    {
                                        <br />

                                        @shop.Address.Country
                                    }
                                </address>
                            </div>
                        }

                        <div class="mb-4 pb-3 border-bottom">
                            <h6 class="text-secondary fw-bold mb-2">
                                <i class="bi bi-box-seam-fill me-2 text-primary opacity-75"></i> Products
                            </h6>
                            <p class="mb-0 ps-4 fw-semibold text-success fs-5">@shop.ProductCount</p>
                        </div>

                        @* Keep Schedule block exactly as is *@
                        @if (shop.Schedule is not null && shop.Schedule.Any())
                        {
                            <div class="mb-4 pb-3 border-bottom">
                                <h6 class="text-secondary fw-bold mb-2">
                                    <i class="bi bi-calendar-week-fill me-2 text-primary opacity-75"></i> Schedule
                                </h6>
                                <ul class="list-unstyled mb-0 small text-muted ps-4">
                                    @foreach (var scheduleEntry in shop.Schedule.OrderBy(s => (int)s.Day))
                                    {
                                        <li>
                                            <strong>@scheduleEntry.Day:</strong>
                                            @if (scheduleEntry.OpenTime == TimeSpan.Zero && scheduleEntry.CloseTime == TimeSpan.Zero)
                                            {
                                                <span class="text-danger"> Closed</span>
                                            }
                                            else
                                            {
                                                <span> @scheduleEntry.OpenTime - @scheduleEntry.CloseTime</span>
                                            }
                                        </li>
                                    }
                                </ul>
                            </div>
                        }
                        else
                        {
                            <div class="mb-4 pb-3 border-bottom">
                                <h6 class="text-secondary fw-bold mb-2">
                                    <i class="bi bi-calendar-week-fill me-2 text-primary opacity-75"></i> Schedule
                                </h6>
                                <p class="mb-0 ps-4 text-warning">No schedule information available.</p>
                            </div>
                        }

                        <div class="mb-0 flex-grow-1">
                            <h6 class="text-secondary fw-bold mb-2">
                                <i class="bi bi-person-fill me-2 text-primary opacity-75"></i> Representative
                            </h6>
                            <p class="mb-0 ps-4 text-truncate text-muted" title="@(shop.MarketRepresentative?.Email ?? "(N/A)")">
                                @(shop.MarketRepresentative?.Email ?? "(N/A)")
                            </p>
                        </div>
                    </div>

                    <div class="card-footer bg-light border-0 text-center p-3">
                        <a href="@Url.Action("EditShop", "RepresentativeShops", new { shopId = shop.Id })"
                           class="btn btn-outline-primary btn-lg rounded-pill shadow-sm d-inline-flex align-items-center gap-2 px-4">
                            <i class="bi bi-info-circle-fill fs-5"></i> Edit Shop Details
                        </a>
                    </div>
                </div>
            </div>
        }
    </div>

    <div class="d-flex justify-content-center mt-5">
        @await Html.PartialAsync("_Pagination", Model.Pagination)
    </div>
}